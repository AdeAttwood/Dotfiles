snippet #! "shebang"
#!/usr/bin/env node
endsnippet

snippet vreq "assign a CommonJS-style module to a var"
const ${0:${1/(.+\/)*(\w+)(-|\b|$)(\..+$)?/\u$2/g}} = require('$1');
endsnippet

snippet import "ES6 import" b
import {$0} from '$1';
endsnippet

snippet ex "module.exports"
module.exports = $0;
endsnippet

snippet default "export default" b
export default $0
endsnippet

snippet cl "Console LOG" b
console.log($0);
endsnippet

snippet cw "Console Warn" b
console.warn($0);
endsnippet

snippet ce "Console Error" b
console.error($0);
endsnippet

snippet rfc "React functional component" b
export const ${1:Name} = (${2:props})=> {
    return (
		${0:<div>Component</div>}
    );
};

$1.propTypes = {};
endsnippet

snippet rc "React component" b
export class ${1:Name} extends React.Component {
	static propTypes = {};

	state = {};

    render() {
		return (
			${0:<div>Component</div>}
		);
    }
}
endsnippet

snippet raect "Adds react import statements" b
import React from 'react';
import PropTypes from 'prop-types';
endsnippet

snippet useState "React.useState" w
const [$1, set${1/\w+\s*/\u$0/g}] = React.useState(${3:''});${0}
endsnippet

snippet useEffect "useEffect" w
React.useEffect(() => {
  $0
});
endsnippet

snippet useContext "useContext" w
const $1 = React.useContext($2);${0}
endsnippet

snippet useCallback "useCallback" w
React.useCallback(
	() => {
		$0
	},
	[$1],
);
endsnippet

snippet useMemo "useMemo" w
const $1 = React.useMemo(() => {
	${0}
}, [$2]);
endsnippet

snippet useRef "useRef" w
const $1 = React.useRef($2);${0}
endsnippet
